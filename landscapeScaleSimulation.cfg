##############
# input data #
##############

#
# All host data must be gis raster format (with 6 header lines)
# 
# Note cells with propFull < cellThresh are automatically filtered out at the reading in stage (see below)
#

filePropFull=propFull.txt
fileRelInf=relInfectivity.txt
fileRelSus=relSusceptibility.txt
fileRelPri=relPrimaryInf.txt

#
# Minimum host density for cell to be included in simulation
#

cellThresh=0.0

########################
# simulation behaviour #
########################

#
# Number of iterations to run
#

numIts=100

#
# Output stub (will write out <outStub>_<it>.txt)
#

outStub=epidemicRuns

#
# How often print to the screen to report incidence
#

reportTime=1

#
# Stopping condition for each individual run
#	(simulation will stop when exceed either)
#

maxTime=1000000.0
maxIncidence=0.01

#######################
# epidemic parameters #
#######################

#
# There would be ratePriInf primary infections somewhere over the landscape per unit of time
#	if every potentially infectable cell (i.e. propFull > cellThresh) were
#		i)  totally full of citrus (i.e. propFull=1.0)
#		ii) totally susceptible (i.e. relSus=1.0)
#		iii) not already infected
#
# The observed rate of primary infections will therefore be lower than this since
#	i) not all cells are totally full of citrus
#	ii) not all cells are totally susceptible
#	iii) some cells that would otherwise become infected via primary infection would already be infected anyway
#
# Rely on primary infection to kick start the epidemic (i.e. first infection happens at t > 0.0), unless 
#	ratePriInf=0.0, in which case start with one randomly selected seed somewhere across the landscape
#

ratePriInf=0.0005

#
# Each infected cell would create secondary infections at rate rateSecInf per unit of time 
#	if every infected cell were
#		i) totally full of citrus (i.e. propFull=1.0)
#		ii) had full infectivity (i.e. relInf=1.0)
#		iii) had been infected for long enough to be fully infectious (see withinCellBulkUp/withinCellMin below)
#	if every potentially infectable cell (i.e. propFull > cellThresh) were
#		i) totally full of citrus (i.e. propFull=1.0)
#		ii) totally susceptible (i.e. relSus=1.0)
#		iii) not already infected
#	and if the dispersal kernel
#		i) never carried inoculum off the edge of the landscape
#		ii) did not allow inoculum to disperse onto cells within the landscape but which do not contain host
#
# The observed rate of secondary infections will therefore be lower than this since
#	i) not all cells are totally full of citrus
#	ii) not all cells are totally susceptible/have full infectivity
#	iii) not all cells will have become fully infected
#	iv) some inoculum is wasted off the edge of the landscape or by landing on a cell without any host
#	iii) some cells that would otherwise become infected via secondary infection would already be infected anyway
#

rateSecInf=10

#
# Scale of exponential exp(-d/dispScale) kernel (centroid to centroid for simplicity)
#
# Scale is measured in cells
#
# Note for 2D exponential dispersal kernel, mean distance is 2/dispScale
#

dispScale=10

#
# Cells become more infective over time according to a logistic within-cell bulk up of infectivity
#
#	theta(t) = thetaMax/(1+J*exp(-r*t));
# 
# where 
#		- t 		= time since first infection of the cell
#		- theta(t) 	= infectivity of cell at time t
#		- r 		= (logistic growth) rate at which infectivity increases
#		- thetaMax 	= propFull * relInf * rateSecInf
#		- J 		= (1-w0)/w0;
#
# Note that the form of J means that the proportion w0 of the cell in question is infected at t=0 
#	(for cells with different propFull, this corresponds to different actual areas, unless trueMinFlag=1 [see below])
#

#
# Local bulk up rate of infection within cell (r in above formula)
#

withinCellBulkUp=1.25

#
# Minimum fraction of a cell that can be infected (w0 in above formula)
#

withinCellMin=0.006

#
# If this flag is set to 1, then use "true" minimum infection 
#	(i.e. make withinCellMin the fraction of the entire cell that is infected at t=0, rather than the fraction of the host in the cell)
#	(It is then possible that there will be some cells i such that withinCellMin >  pLandscape->aCells[i].propFull 
#		...in these cases just set cell i to be fully infected at time of infection, and so have an incidence of pLandscape->aCells[i].propFull)
#

trueMinFlag=0